spending escrow

struct Datum {
    buyerPkh: PubKeyHash
    buyerTokenId: Int
    depositVal: Value
    orderId: ByteArray
    orderVal: Value
    productVal: Value
    sellerPkh: PubKeyHash
    sellerTokenId: Int
}

enum Redeemer {
    Approve
    Refund
    Process 
}

// Escrow validator script parameters 
const BUYER_PKH: ByteArray = #
const buyerPkh: PubKeyHash = PubKeyHash::new(BUYER_PKH)

const SELLER_PKH: ByteArray = #
const sellerPkh: PubKeyHash = PubKeyHash::new(SELLER_PKH)

const OWNER_PKH: ByteArray = #
const ownerPkh: PubKeyHash = PubKeyHash::new(OWNER_PKH)


func main(datum: Datum, redeemer: Redeemer, ctx: ScriptContext) -> Bool {
    
    tx : Tx = ctx.tx;

    redeemer.switch {
        Approve => {
            sellerVal: Value = datum.orderVal;
            buyerVal: Value = datum.depositVal + datum.productVal;

            tx.is_signed_by(datum.buyerPkh).trace("EV1: ") &&
            tx.is_signed_by(datum.sellerPkh).trace("EV2: ") &&
            tx.is_signed_by(ownerPkh).trace("EV3: ") &&
            (tx.value_sent_to(datum.sellerPkh).contains(sellerVal)).trace("EV4: ") &&
            (tx.value_sent_to(datum.buyerPkh).contains(buyerVal)).trace("EV5: ") &&
            (datum.sellerPkh == sellerPkh).trace("EV6: ") &&
            (datum.buyerPkh == buyerPkh).trace("EV7: ")

        },
        Refund => {
            sellerVal: Value = datum.productVal;
            buyerVal: Value = datum.depositVal + datum.orderVal;

            tx.is_signed_by(datum.buyerPkh).trace("EV8: ") &&
            tx.is_signed_by(datum.sellerPkh).trace("EV9: ") &&
            tx.is_signed_by(ownerPkh).trace("EV10: ") &&
            (tx.value_sent_to(datum.sellerPkh).contains(sellerVal)).trace("EV11: ") &&
            (tx.value_sent_to(datum.buyerPkh).contains(buyerVal)).trace("EV12: ") &&
            (datum.sellerPkh == sellerPkh).trace("EV13: ") &&
            (datum.buyerPkh == buyerPkh).trace("E14: ")
        },
        Process => {
            sellerVal: Value = datum.orderVal;
            buyerVal: Value = datum.productVal;
            ownerVal: Value = datum.depositVal;

            tx.is_signed_by(datum.sellerPkh).trace("EV15: ") &&
            tx.is_signed_by(ownerPkh).trace("EV15: ") &&
            (tx.value_sent_to(datum.sellerPkh).contains(sellerVal)).trace("EV16: ") &&
            (tx.value_sent_to(datum.buyerPkh).contains(buyerVal)).trace("EV17: ") &&
            (tx.value_sent_to(ownerPkh).contains(ownerVal)).trace("EV18: ") &&
            (datum.sellerPkh == sellerPkh).trace("EV19: ") &&
            (datum.buyerPkh == buyerPkh).trace("E20: ")
        }
    }
}